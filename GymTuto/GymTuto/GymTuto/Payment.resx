<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAABORJREFUaEPt
        mktoJFUUhkudqttJRHw/8S2CKCoOOqmqnsG1oi7MIKMygs8RHyOoGwWZha7EF7jQlbqQ2Yi4EXQjgs5C
        GQcN6GLEzbjTKJox6e7qJOV/ypMLuTlJ30d1x6Hrg5+E7nP/c6vr1q1zb1XU0NDQ0DCulNEtZ/WSbKaI
        09fx9/MiyY5Bfxo6Vn0XZ6/h791llJ7JzU8Myqh9RhHn+wqVf42DWYZKRy0XKvsKP9JjZXTr6Wz7/2Nh
        Mr+QzhI6fNw4gBAd7yX5q+XUzedzmq0HZ6GFoXgAnesYna1Ti5SDcnHaraGr0qvQmSNG54ap77oqu5LT
        j5auyu9EB/42OjQK/bWkstu5G6Ohr9LnkHjF6MgotdJX2bPcneGCielxoQNboRWayblbwwEz5j1I5HOr
        0WIrjRTjoCVMZjNsVS84szciQfBMzHYaKcZRnSJu38B29VBG1yYwnjUSeYktNVKMh74vo+0xW4bTT/KX
        hCReYkuNFOMj9PEFtgxjcSK9qEjSf6QkDur1k+yjQqVPsK0GJeiT6OzHiOkabVw1X0tFhmv3LcHcRe+V
        kzsvYLsNQRV1Nmrod4X29kJpy3Z+lNHOc2C0uM7YTsu4bTzIVtZg4fFA1Vb2HKQF+uHYyh0MwWcEUyvh
        dvEy2zjDtbnoO1Aqe4pt3IGBb508V0bXT7GNppeke/DdYYhGDa7Z9Ef8qPvLaPcpHFLBdwVaO0veg/Qt
        27hRLfdkQwvlH7KNBtfXo3IspPJ3OEyD+DfF2MFaKad2nMc29uBs3CuYWQkz8otso+ENATEeWqKVF20e
        rApD82khzkpUEXJae0JmZ6mwx+cHzbihKc7f4LT2YOL4TDSzkXB7oHskew59lYU8n3Jae9DwF9PIQbNs
        s45uq30FjQAM+08Q5zsxDdJRTmcPGv1hmDgJv/JdbLUp5anZuYidwUT3Adr53vPXSmW/s709aNhbZ+Sm
        uSKevontrKiqrTh/G21Dh32XLe1Bo8Iw8dFCX+XPS/fkzcBBPyx4ucjrgIOGtKF56CCVmhi+15mFhkQV
        L3sNlueQDpm0BgirL5V9SWe/08ou5ZRr6G/LUrmtldwnLb6FSGZ1q0CuVzithhb0+M5rEQE/j9tS+LLQ
        SXRGObUGn/ttA/sVHlWhLxtuLizRopPYpgI/3iNC3BrRPjeHV2DG3obPPc9wuptt7KECHI29bg9d1b6a
        bSrKKJ3AQX8hxbIOYwhPcnhFEbe3C3E2WvZeE6PxN4aZlXANHWALDTrRwkHTnvYhiB6T0pbOLC00ymjH
        aRymoUes5OWhQ2zhTsCKZb7Tmr6MbZzpJdPXwMOv6hL2zawJ3OL5aXFi18VsZU2ntetytP3Z8LJV2BYP
        ETRbq+w32qPCJHYy221INUlRhUVtJC8bhW7iEXVs0+I6/bWqkeP8IbbV4LN98H8fcXNmO0fVs01L0HJO
        SOAlttRIMV5S6X62DOe/TbX8BzGRo9hSI8V46Eitj1oIqnlhHDrs6j9gLBQ6E+1L2K5eUFDcgST9dUkd
        xFYaKcZB/SWV38ZWw8GmTByR6IG485MNL1BJ3Y+EdWwQ+KrXS/L7uDujYaxealllrF5bWoWqKFxLe9GZ
        4Bl8E81RDsrFabeesXn10GRsXi6V2OD1YdrBXD04+v/Efn24oaGhoaE2ouhfGtf6eaACFF4AAAAASUVO
        RK5CYII=
</value>
  </data>
</root>